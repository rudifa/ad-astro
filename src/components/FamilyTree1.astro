---

---

<div id='family-tree-1'></div>
<script>
  import * as d3 from 'd3';

  const margin = { top: 20, right: 20, bottom: 20, left: 20 };
  const width = 800 - margin.left - margin.right;
  const height = 600 - margin.top - margin.bottom;

  const svg = d3
    .select('#family-tree-1')
    .append('svg')
    .attr('width', width + margin.left + margin.right)
    .attr('height', height + margin.top + margin.bottom)
    .append('g')
    .attr('transform', `translate(${margin.left},${margin.top})`);

  // Hardcoded tree data
  const hierarchyFatherOf2Children = {
    name: 'John Doe',
    children: [
      {
        name: 'Robert Doe',
        children: [{ name: 'William Doe' }, { name: 'Sarah Doe Miller' }],
      },
      {
        name: 'Jane Doe Smith',
        children: [{ name: 'Michael Smith' }, { name: 'Anna Smith Johnson' }],
      },
    ],
  };

  // Create a tree layout
  const root = d3.hierarchy(hierarchyFatherOf2Children);
  const treeLayout = d3.tree().size([width, height]);
  treeLayout(root);

  // Nodes
  svg
    .selectAll('g.node')
    .data(root.descendants())
    .enter()
    .append('g')
    .attr('class', 'node')
    .attr('transform', (d) => `translate(${d.x},${d.y})`)
    .each(function (d) {
      d3.select(this)
        .append('ellipse')
        .attr('cx', 0)
        .attr('cy', 0)
        .attr('rx', 50)
        .attr('ry', 20)
        .style('fill', '#69b3a2');

      d3.select(this)
        .append('text')
        .attr('x', 0)
        .attr('y', 5)
        .attr('text-anchor', 'middle')
        .text(d.data.name)
        .style('font-size', '12px')
        .style('fill', '#fff');
    });
  // Links
  svg
    .selectAll('line.link')
    .data(root.links())
    .enter()
    .append('line')
    .attr('class', 'link')
    .attr('x1', (d) => d.source.x)
    .attr('y1', (d) => d.source.y)
    .attr('x2', (d) => d.target.x)
    .attr('y2', (d) => d.target.y)
    .style('stroke', '#ccc');
</script>
